{"version":3,"sources":["constants/breakpoints.js","components/InputBox/InputBox.js","components/Todo/Todo.js","components/Todos/Todos.js","components/FunctionColumn/FunctionColumn.js","API/useTodoApi.js","components/TodoApp/TodoApp.js","index.js"],"names":["MEDIA_QUERY_MD","Container","Underline","Input","InputBox","useContext","TodoContext","inputTodoRef","handleAddTodo","onKeyDown","ref","placeholder","props","theme","isDone","Reminder","Checkbox","Content","InputContent","Buttons","DeleteButton","EditButton","DeleteIcon","CheckIcon","PenIcon","Todo","todo","inputEditTodoContent","useRef","id","content","useState","isEditMode","setIsEditModeMode","todos","setTodos","useEffect","current","focus","handleChangeTodoState","useCallback","map","handleEditTodo","e","target","value","handleDeleteTodo","filter","handleChangeMode","type","onClick","className","onChange","key","Todos","isShow","Counter","StateSwitcher","StateAll","selectedState","StateActive","StateCompleted","ClearCompletedButton","FunctionColumn","setselectedState","numCompleted","useMemo","length","computeNumberCompleted","handleClearCompleted","preState","classList","contains","useTodoApi","todoData","window","localStorage","getItem","JSON","parse","setItem","stringify","TodoCard","Title","createContext","TodoApp","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37bf0ebf.chunk.js","sourcesContent":["export const MEDIA_QUERY_MD = '@media screen and (max-width: 768px)'","import styled from '@emotion/styled/macro';\r\nimport { useContext } from 'react';\r\nimport { TodoContext } from '../TodoApp/TodoApp.js'\r\nimport { MEDIA_QUERY_MD } from '../../constants/breakpoints'\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n`\r\nconst Underline = styled.div`\r\n  position: absolute;\r\n  bottom: -1px;\r\n  left: 50%;\r\n  width: 0;\r\n  height: 2px;\r\n  background-color: #189BA3;\r\n  transition: all 0.2s;\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  background-color: #FFFDE7;\r\n  border: inherit;\r\n  padding: 10px;\r\n  color: #189BA3;\r\n  font-family: 'Quicksand', \"Microsoft JhengHei\", sans-serif;\r\n  font-size: 20px;\r\n  :focus {\r\n    outline: inherit;\r\n    font-size: 20px;\r\n    & + ${Underline} {\r\n      left: 0;\r\n      width: 100%;      \r\n    }\r\n  }\r\n  ${MEDIA_QUERY_MD} {\r\n    font-size: 10px;\r\n  }  \r\n`\r\n\r\nexport default function InputBox() {\r\n  const { inputTodoRef, handleAddTodo } = useContext(TodoContext)\r\n  return (\r\n    <Container>\r\n      <Input\r\n        onKeyDown={handleAddTodo}\r\n        ref={inputTodoRef}\r\n        placeholder=\"Add something to do here <(￣︶￣)>?\"\r\n      />\r\n      <Underline />\r\n    </Container>\r\n  )\r\n}\r\n\r\n","// STEP 1：載入 emotion 的 styled 套件\r\nimport styled from '@emotion/styled/macro';\r\nimport { useContext, useState, useRef, useEffect, useCallback } from 'react';\r\nimport { TodoContext } from '../TodoApp/TodoApp.js'\r\nimport { ThemeProvider } from '@emotion/react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = styled.li`\r\n  position: relative;\r\n  padding: 12px 24px;\r\n  font-size: 20px;\r\n  transition: all 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  opacity: ${props => props.theme.isDone? '0.4;' : '1;'}\r\n  :hover {\r\n    background-color:${props => props.theme.isDone? '#FFFDE7;' : 'rgba( 255, 255, 255, 0.9);'} \r\n  }\r\n`\r\n\r\nconst Reminder = styled.span`\r\n  width: 60px;\r\n  background-color: #189BA3;\r\n  color: #fff;\r\n  font-family: 'Quicksand', \"Microsoft JhengHei\", sans-serif;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  border-radius: 6px;\r\n  padding: 5px 0;\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: -50px;\r\n  left: 50%;\r\n  margin-left: -30px;\r\n  opacity: 0;\r\n  transition: all 0.2s;\r\n  :after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 50%;\r\n    margin-left: -5px;\r\n    border-width: 5px;\r\n    border-style: solid;\r\n    border-color: #189BA3 transparent transparent transparent;    \r\n  }\r\n`\r\n\r\nconst Checkbox = styled.button`\r\n  cursor: pointer;\r\n  position: relative;\r\n  display: inline-block;\r\n  height: 20px;\r\n  min-width: 20px;\r\n  border: 2px solid #189BA3;\r\n  border-radius: 3px;\r\n  margin-right: 10px;\r\n  background-color: transparent;\r\n  padding: 0;\r\n  transition: all 0.2s;\r\n  :hover ${Reminder} {\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst Content = styled.span`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  position: relative;\r\n  display: inline-block;\r\n  margin: 10px 0;\r\n  font-size: 20px;\r\n  :after {\r\n    content: '';\r\n    position: relative;\r\n    top: -12px;\r\n    left: -5%;\r\n    display: ${props => props.theme.isDone? 'block;' : 'none;'}\r\n    width: 110%;\r\n    border-bottom: 1px solid #189BA3;\r\n  }\r\n`\r\n\r\nconst InputContent = styled.input`\r\n  position: relative;\r\n  display: inline-block;\r\n  margin: 10px 0;\r\n  font-size: 20px;\r\n  background-color: #FFFDE7;\r\n  font-weight: bold;\r\n  font-family: 'Quicksand';\r\n  padding: 0 0 5px 0;\r\n  color: #189BA3;\r\n  border: inherit;\r\n  border-bottom: 3px solid #189BA3;\r\n  :focus {\r\n    outline: inherit;\r\n  }\r\n  :after {\r\n    content: '';\r\n    position: relative;\r\n    top: -12px;\r\n    left: -5%;\r\n    display: ${props => props.theme.isDone? 'block;' : 'none;'}\r\n    width: 110%;\r\n    border-bottom: 1px solid #189BA3;\r\n  }\r\n`\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  margin-left: auto\r\n`\r\n\r\nconst DeleteButton = styled.button`\r\n  cursor: pointer;\r\n  position: relative;\r\n  font-size: 20px;\r\n  background-color: transparent;\r\n  border: inherit;\r\n  padding: 0;\r\n  transition: all 0.2s;\r\n  :hover ${Reminder} {\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst EditButton = styled.button`\r\n  cursor: pointer;\r\n  position: relative;\r\n  font-size: 20px;\r\n  background-color: transparent;\r\n  border: inherit;\r\n  padding: 0;\r\n  transition: all 0.2s;\r\n  :hover ${Reminder} {\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst DeleteIcon = styled.i`\r\n  padding: 2px;\r\n  color: #189BA3;\r\n`\r\n\r\nconst CheckIcon = styled.i`\r\n  padding: 2px;\r\n  color: #189BA3;\r\n  z-index: 1\r\n`\r\nconst PenIcon = styled.i`\r\n  padding: 2px;\r\n  color: #189BA3;\r\n  z-index: 1\r\n`\r\n\r\nfunction Todo({ todo }) {\r\n  const inputEditTodoContent = useRef(null)\r\n  const { id, isDone, content } = todo\r\n  const [ isEditMode, setIsEditModeMode ] = useState(false)\r\n  const { todos, setTodos } = useContext(TodoContext)\r\n\r\n  useEffect(() => {\r\n    if (!isEditMode) return\r\n    inputEditTodoContent.current.focus()\r\n  }, [isEditMode]);\r\n\r\n  const handleChangeTodoState = useCallback(\r\n    () => {\r\n      setTodos(todos.map((todo) => {\r\n        if (todo.id !== id) return todo\r\n        return {\r\n          ...todo,\r\n          isDone: !todo.isDone\r\n        }\r\n      }))\r\n    }, [id, todos, setTodos])\r\n\r\n  const handleEditTodo = useCallback(\r\n    (e) => {\r\n      setTodos(todos.map((todo) => {\r\n        if (todo.id !== id) return todo\r\n        return {\r\n          ...todo,\r\n          content: e.target.value\r\n        }\r\n      }))\r\n    }, [id, todos, setTodos])\r\n\r\n  const handleDeleteTodo = useCallback(\r\n    () => {\r\n      setTodos(todos.filter((todo) => \r\n        todo.id !== id\r\n      ))\r\n    }, [id, todos, setTodos])\r\n\r\n  const handleChangeMode = useCallback(\r\n    () => {\r\n      setIsEditModeMode(!isEditMode)\r\n    }, [isEditMode, setIsEditModeMode])\r\n\r\n  const theme = {\r\n    isDone\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Checkbox type=\"button\" onClick={handleChangeTodoState}>\r\n          {isDone? <CheckIcon className=\"fas fa-check fa-sm\" /> : <Reminder>完成</Reminder>}\r\n        </Checkbox>\r\n        {isEditMode? \r\n          <InputContent \r\n            value={content} \r\n            onChange={handleEditTodo}\r\n            ref={inputEditTodoContent}\r\n            onKeyDown={(e) => {\r\n              if (e.key !== 'Enter') return\r\n              handleChangeMode()\r\n            }}\r\n          /> : <Content>{content}</Content>}\r\n        <Buttons>\r\n          <EditButton\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (isEditMode) return\r\n              handleChangeMode()\r\n            }}\r\n          > \r\n            <PenIcon className=\"fas fa-pen fa-sm\"></PenIcon>\r\n            <Reminder>編輯</Reminder>\r\n          </EditButton>\r\n          <DeleteButton type=\"button\" onClick={handleDeleteTodo}> \r\n            <DeleteIcon className=\"fas fa-times fa-sm\"></DeleteIcon>\r\n            <Reminder>刪除</Reminder>\r\n          </DeleteButton>\r\n        </Buttons>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n\r\nTodo.propTypes = {\r\n  todo: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      content: PropTypes.string,\r\n      isDone: PropTypes.bool,\r\n      isShow: PropTypes.bool,\r\n    })\r\n};\r\n","// STEP 1：載入 emotion 的 styled 套件\r\nimport styled from '@emotion/styled/macro';\r\nimport Todo from '../Todo';\r\nimport { useContext } from 'react';\r\nimport { TodoContext } from '../TodoApp/TodoApp.js'\r\n\r\nconst Container = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n`\r\n\r\nfunction Todos() {\r\n  const { todos } = useContext(TodoContext)\r\n  return (\r\n    <Container>\r\n      {todos.filter((todo) => todo.isShow).map((todo) => <Todo todo={todo} key={todo.id}/>)}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","import styled from '@emotion/styled/macro';\r\nimport { useContext, useMemo, useState, useCallback } from 'react'\r\nimport { TodoContext } from '../TodoApp/TodoApp.js'\r\nimport { ThemeProvider } from '@emotion/react'\r\nimport { MEDIA_QUERY_MD } from '../../constants/breakpoints'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between\r\n`\r\n\r\nconst Counter = styled.div`\r\n  text-align: center;\r\n  ${MEDIA_QUERY_MD} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst StateSwitcher = styled.div`\r\n  display: flex;\r\n  justify-content: space-between\r\n`\r\n\r\nconst StateAll = styled.button`\r\n  cursor: pointer;\r\n  background: none;\r\n  color: inherit;\r\n  border: 2px solid transparent;\r\n  padding: 0 10px;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: inherit;\r\n  border-color: ${(props) => props.theme.selectedState === 'show-all' ? 'rgba(175, 47, 47, 0.2);' : 'transparent;'}\r\n  ${MEDIA_QUERY_MD} {\r\n    font-size: 12px\r\n  }\r\n`\r\nconst StateActive = styled.button`\r\n  cursor: pointer;\r\n  background: none;\r\n  color: inherit;\r\n  border: 2px solid transparent;\r\n  padding: 0 10px;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: inherit;\r\n  border-color: ${(props) => props.theme.selectedState === 'show-active' ? 'rgba(175, 47, 47, 0.2);' : 'transparent;'}\r\n  ${MEDIA_QUERY_MD} {\r\n    font-size: 12px\r\n  }\r\n`\r\nconst StateCompleted = styled.button`\r\n  cursor: pointer;\r\n  background: none;\r\n  color: inherit;\r\n  border: 2px solid transparent;\r\n  padding: 0 10px;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: inherit;\r\n  border-color: ${(props) => props.theme.selectedState === 'show-completed' ? 'rgba(175, 47, 47, 0.2);' : 'transparent;'}\r\n  ${MEDIA_QUERY_MD} {\r\n    font-size: 12px\r\n  }\r\n`\r\n\r\nconst ClearCompletedButton = styled.button`\r\n  background: none;\r\n  color: inherit;\r\n  border: none;\r\n  padding: 0;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: inherit;\r\n  ${MEDIA_QUERY_MD} {\r\n    font-size: 12px\r\n  }\r\n`\r\n\r\nconst computeNumberCompleted = (todos) => (\r\n  todos.filter((todo) => !todo.isDone).length\r\n)\r\n\r\nexport default function FunctionColumn() {\r\n  const [selectedState, setselectedState] = useState('show-all')\r\n  const { todos, setTodos } = useContext(TodoContext)\r\n  const numCompleted = useMemo(() => computeNumberCompleted(todos), [todos])\r\n\r\n  const handleSwitchSelectedState = (e) => {\r\n    const { classList } = e.target\r\n    if (!classList.contains('button-switch')) return\r\n    setTodos((preState) => {\r\n      return preState.map((todo) => ({\r\n        ...todo,\r\n        isShow: classList.contains('show-all') ? true : classList.contains('show-active') ? !todo.isDone : todo.isDone\r\n      }))\r\n    })\r\n    setselectedState(classList[0])\r\n  }\r\n\r\n  const handleClearCompleted = useCallback(\r\n    () => {\r\n      setTodos((preState) => {\r\n        return preState.filter((todo) => !todo.isDone)\r\n      })    \r\n    }, [setTodos])\r\n\r\n  const theme = {\r\n    selectedState\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Counter>{numCompleted} items left</Counter>\r\n        <StateSwitcher onClick={handleSwitchSelectedState}>\r\n          <StateAll className=\"show-all button-switch\">All</StateAll>\r\n          <StateActive className=\"show-active button-switch\">Active</StateActive>\r\n          <StateCompleted className=\"show-completed button-switch\">Completed</StateCompleted>\r\n        </StateSwitcher>\r\n        <ClearCompletedButton onClick={handleClearCompleted}>Clear completed</ClearCompletedButton>\r\n      </Container>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","import { useState, useRef, useEffect, useCallback } from 'react';\r\n  \r\nconst useTodoApi = () => {\r\n  let id = useRef(1)\r\n  const [ todos, setTodos ] = useState(() => {\r\n    let todoData = window.localStorage.getItem(\"todos\") || \"\"\r\n    if (todoData) {\r\n      todoData = JSON.parse(todoData)\r\n      id.current = todoData[todoData.length - 1].id + 1\r\n    } else {\r\n      todoData = []\r\n    }\r\n    return todoData\r\n  })\r\n  useEffect(() => {\r\n    window.localStorage.setItem('todos', JSON.stringify(todos))\r\n  })\r\n  //\r\n  const inputTodoRef = useRef(null);\r\n  const handleAddTodo = useCallback((e) => {\r\n    if (e.key !== 'Enter') return\r\n    const { value } = inputTodoRef.current\r\n    setTodos([...todos, {\r\n      id: id.current,\r\n      isDone: false,\r\n      content: value,\r\n      isShow: true\r\n    }])\r\n    id.current ++\r\n    inputTodoRef.current.value = ''\r\n  }, [todos, setTodos, id, inputTodoRef])\r\n  return [ id, todos, setTodos, inputTodoRef, handleAddTodo ]\r\n}\r\n\r\nexport default useTodoApi\r\n\r\n\r\n","import styled from '@emotion/styled/macro';\r\nimport InputBox from '../InputBox';\r\nimport Todos from '../Todos';\r\nimport FunctionColumn from '../FunctionColumn';\r\nimport { createContext } from 'react';\r\nimport useTodoApi from '../../API/useTodoApi'\r\nimport { MEDIA_QUERY_MD } from '../../constants/breakpoints'\r\n\r\nconst Container = styled.div`\r\n  min-height: 800px;\r\n  height: 100%;\r\n  padding: 10px;\r\n  background-color: #ededed;\r\n`;\r\n\r\nconst TodoCard = styled.div`\r\n  position: relative;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  max-width: 760px;\r\n  background-color: #FFFDE7;\r\n  margin-top: 100px;\r\n  padding: 15px 20px;\r\n  box-shadow: 2px 2px 6px #cccccc;\r\n  color: #189BA3;\r\n  :before,:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 30px;\r\n    display: block;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    background-color: #6fc6cc;\r\n    box-shadow: 3px 3px 4px #cccccc;\r\n  }\r\n  :before {\r\n    left: 30px\r\n  }\r\n  :after {\r\n    right: 30px\r\n  }\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-size: 64px;\r\n  margin: 20px 0 15px;\r\n  text-align: center;\r\n  ${MEDIA_QUERY_MD} {\r\n    font-size: 32px;\r\n  }\r\n`\r\n\r\nexport const TodoContext = createContext()\r\n\r\nexport default function TodoApp() {\r\n  const [ id, todos, setTodos, inputTodoRef, handleAddTodo ] = useTodoApi()\r\n  return (\r\n    <TodoContext.Provider value={{todos, setTodos, id, inputTodoRef, handleAddTodo }}>\r\n      <Container>\r\n        <TodoCard>\r\n          <Title>Todo List</Title>\r\n          <InputBox />\r\n          <Todos />\r\n          <FunctionColumn />\r\n        </TodoCard>\r\n      </Container>\r\n    </TodoContext.Provider>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport TodoApp from './components/TodoApp';\r\n\r\nReactDOM.render(\r\n  <TodoApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}